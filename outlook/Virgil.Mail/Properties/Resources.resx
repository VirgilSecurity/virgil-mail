<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icon_512x512@2x" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\icon_512x512@2x.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Button_Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Button_ExportPrivateKey" xml:space="preserve">
    <value>Export private key...</value>
  </data>
  <data name="Button_RemoveAccount" xml:space="preserve">
    <value>Delete...</value>
  </data>
  <data name="Description_RemoveAccount" xml:space="preserve">
    <value>Be careful with the current operation. You won't be able to decrypt mail linked with this private key.</value>
  </data>
  <data name="Description_RemovePrivateKeyFromLocalStorage" xml:space="preserve">
    <value>Remove your private key from local storage if you need to clear your machine from personal data.</value>
  </data>
  <data name="Description_SavePrivateKeyPassword" xml:space="preserve">
    <value>This option allows you to avoid entering your password for every crypto operation.</value>
  </data>
  <data name="Error_ConfirmationCodeIsNotArrived" xml:space="preserve">
    <value>The message with confirmation code has not arrived. Try again later.</value>
  </data>
  <data name="Error_IncorrectPrivateKeyPassword" xml:space="preserve">
    <value>Incorrect private key password</value>
  </data>
  <data name="Label_AccountRemovedSuccessfully" xml:space="preserve">
    <value>The Account has been deleted successfully</value>
  </data>
  <data name="Label_EnterAccountPrivateKeyPassword" xml:space="preserve">
    <value>Enter account's private key password</value>
  </data>
  <data name="Label_PrivateKeyRemovedFromLocalStorageSuccessfully" xml:space="preserve">
    <value>The private key has been deleted successfully. You can upload it at any moment again.</value>
  </data>
  <data name="Label_RemoveAccount" xml:space="preserve">
    <value>Delete Account</value>
  </data>
  <data name="Label_RemovePrivateKeyFormLocalStorage" xml:space="preserve">
    <value>Delete private key from the local storage</value>
  </data>
  <data name="Label_SavePrivateKeyPassword" xml:space="preserve">
    <value>Save private key password</value>
  </data>
  <data name="Label_SendingVerificationRequest" xml:space="preserve">
    <value>Sending verification request...</value>
  </data>
  <data name="Label_UploadingPrivateKey" xml:space="preserve">
    <value>Uploading private key....</value>
  </data>
  <data name="Label_WaitingForConfirmationEmail" xml:space="preserve">
    <value>Waiting for confirmation email...</value>
  </data>
  <data name="Warning_RemoveAccount" xml:space="preserve">
    <value>Once you delete your account, there is no going back. Please be certain.</value>
  </data>
  <data name="Warning_RemovePrivateKeyFormLocalStorage" xml:space="preserve">
    <value>The private key will be deleted permanently. Make sure you have saved it in some secure place.</value>
  </data>
  <data name="Label_ConfirmingEmailAccount" xml:space="preserve">
    <value>Confirming email account...</value>
  </data>
  <data name="Label_RevokingPublicKeyFromVirgilServices" xml:space="preserve">
    <value>Revoking public key from Virgil Services...</value>
  </data>
  <data name="Label_RemovingPrivateKey" xml:space="preserve">
    <value>Removing Private Key....</value>
  </data>
  <data name="Label_ManageAccounts" xml:space="preserve">
    <value>Manage Accounts</value>
  </data>
  <data name="Description_ManageAccounts" xml:space="preserve">
    <value>Please manage your Virgil Keys by clicking on one of your Outlook Accounts which shown below:</value>
  </data>
  <data name="Label_Copyright" xml:space="preserve">
    <value>© 2016 Virgil Security, Inc.</value>
  </data>
  <data name="Label_Version" xml:space="preserve">
    <value>Virgil Mail Add-In version: {0}</value>
  </data>
  <data name="Label_ProtectMyPrivateKey" xml:space="preserve">
    <value>Protect my private key with a password</value>
  </data>
  <data name="Description_PrivateKeyPassword" xml:space="preserve">
    <value>Any characters are allowed.</value>
  </data>
  <data name="Watermark_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Watermark_ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Label_SelectOptionToGetPrivateKey" xml:space="preserve">
    <value>Your account is already created please select an option to get your key.</value>
  </data>
  <data name="Label_SelectPrivateKeyFromFile" xml:space="preserve">
    <value>Import your key from a file on your computer</value>
  </data>
  <data name="Label_SelectGeneratingPublicAndPrivateKeyPair" xml:space="preserve">
    <value>Generate public/private key pair.</value>
  </data>
  <data name="Description_SelectPrivateKeyFromFile" xml:space="preserve">
    <value>Use this option if you previously exported your key to the file.</value>
  </data>
  <data name="Description_SelectGeneratePublicAndPrivateKeyPair" xml:space="preserve">
    <value>Use this option if you haven't exported your key to the file previously.</value>
  </data>
  <data name="Label_SearchAccountInformation" xml:space="preserve">
    <value>Search account information...</value>
  </data>
  <data name="Label_GeneratingPublicAndPrivateKeyPair" xml:space="preserve">
    <value>Generating public/private key pair...</value>
  </data>
  <data name="Label_PublishingPublicKey" xml:space="preserve">
    <value>Publishing public key...</value>
  </data>
  <data name="Label_AccountsKeysHasBeenSuccessfullyGenerated" xml:space="preserve">
    <value>Account's keys have been successfully generated and published.</value>
  </data>
  <data name="Label_ExtractingPrivateKeyInfo" xml:space="preserve">
    <value>Extracting private key information...</value>
  </data>
  <data name="Label_LoadingPublicKeyDetails" xml:space="preserve">
    <value>Loading public key details...</value>
  </data>
  <data name="Label_UploadedPrivateKeyDoesnIsNotMatch" xml:space="preserve">
    <value>Uploaded private key doesn't match your Virgil account.</value>
  </data>
  <data name="Label_PrivateKeyImportedSuccessfully" xml:space="preserve">
    <value>Private key has been successfully imported.</value>
  </data>
  <data name="Error_UploadedFileInvalid" xml:space="preserve">
    <value>Uploaded file is invalid or has the wrong format.</value>
  </data>
  <data name="Error_PasswordNotMatchWithConfirmation" xml:space="preserve">
    <value>Your passwords do not match. Please retype your passwords to confirm it.</value>
  </data>
  <data name="Error_PasswordRulesAreNotComplied" xml:space="preserve">
    <value>Password must be 3 - 128 characters. Any characters are allowed.</value>
  </data>
  <data name="Error_UploadingPrivateKeyFailed" xml:space="preserve">
    <value>Uploading private key failed</value>
  </data>
  <data name="Log_Info_PasswordHolder_SetAccountPrivateKeyPassword" xml:space="preserve">
    <value>Store a private key password in encrypted storage</value>
  </data>
  <data name="Log_Info_PasswordHolder_RemoveAccountPrivateKeyPassword" xml:space="preserve">
    <value>Remove a private key password from encrypted storage</value>
  </data>
  <data name="Log_Info_PasswordHolder_GetAccountPrivateKeyPassword" xml:space="preserve">
    <value>Get a private key password from encrypted storage</value>
  </data>
  <data name="Log_Info_PrivateKeysStorage_StorePrivateKey" xml:space="preserve">
    <value>Storing a private key in encrypted storage</value>
  </data>
  <data name="Log_Info_PrivateKeysStorage_GetPrivateKey" xml:space="preserve">
    <value>Getting private key from encrypted storage</value>
  </data>
  <data name="Log_Info_PrivateKeysStorage_HasPrivateKeyPassword" xml:space="preserve">
    <value>Checking if private key has a password</value>
  </data>
  <data name="Log_Info_EncryptedMailViewModel_DecryptMailCanceledBecauseOfRegistration" xml:space="preserve">
    <value>The mail decryption is canceled because of account '{0}' private key is not registered</value>
  </data>
  <data name="Log_Info_EncryptedMailViewModel_StartLoadingEmail" xml:space="preserve">
    <value>Start loading encrypted mail - From: {0}, To: {1}, Subject: '{2}'</value>
  </data>
  <data name="Log_Info_EncryptedMailViewModel_DecryptMailWithAccountPrivateKey" xml:space="preserve">
    <value>Decrypt mail with account's '{0}' private key.</value>
  </data>
  <data name="Error_EmailDecryptionFailed" xml:space="preserve">
    <value>Something went wrong, decryption failed.</value>
  </data>
  <data name="Log_Error_EncryptedMailViewModel_MailDecryptionException" xml:space="preserve">
    <value>Error occured on mail decryption: {0}
StackTrace:
{1}</value>
  </data>
  <data name="Label_CanNotReadEmailBecauseOfUnregisteredAccount" xml:space="preserve">
    <value>You can't read this email because your private key is not registered for this account. 
    Please note that after registering your private key for this account you will be able to read only subsequent emails.</value>
  </data>
  <data name="Button_Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Button_Decrypt" xml:space="preserve">
    <value>Decrypt</value>
  </data>
  <data name="Caption_AccountsAreNotFoundSendInvitation" xml:space="preserve">
    <value>Recipients aren't exists</value>
  </data>
  <data name="Message_AccoutnsAreNotRegisteredSendInvitation" xml:space="preserve">
    <value>The following accounts are not registered yet. Do you want to send them an invitation email?

{0}</value>
  </data>
  <data name="Email_Subject_Invitation" xml:space="preserve">
    <value>Start using Virgil Mail</value>
  </data>
  <data name="Email_Template_InvitationEmail" xml:space="preserve">
    <value>&lt;html&gt;
            &lt;body&gt;
                   &lt;p&gt;Hello&lt;/p&gt;
            	&lt;p&gt;Please install Virgil Mail plugin so that we can continue our secure communication. You can download it from the website here.&lt;/p&gt;
            	&lt;a href='https://virgilsecurity.com/demos' &gt;Download Virgil Mail Add-In.&lt;/a&gt;    
            &lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="Button_CheckForUpdates" xml:space="preserve">
    <value>Check for Updates</value>
  </data>
</root>
